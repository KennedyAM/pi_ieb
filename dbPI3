-- MySQL Script generated by MySQL Workbench
-- Wed Nov 29 20:10:47 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbPI3
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dbPI3` ;

-- -----------------------------------------------------
-- Schema dbPI3
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbPI3` DEFAULT CHARACTER SET utf8 ;
USE `dbPI3` ;

-- -----------------------------------------------------
-- Table `dbPI3`.`coordenador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbPI3`.`coordenador` ;

CREATE TABLE IF NOT EXISTS `dbPI3`.`coordenador` (
  `idcoordenador` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `matricula` INT UNSIGNED NOT NULL,
  `nomeCoordenador` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idcoordenador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbPI3`.`curso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbPI3`.`curso` ;

CREATE TABLE IF NOT EXISTS `dbPI3`.`curso` (
  `idcurso` INT NOT NULL AUTO_INCREMENT,
  `nomeCurso` VARCHAR(45) NOT NULL,
  `coordenador_idcoordenador` INT UNSIGNED NOT NULL DEFAULT 4,
  PRIMARY KEY (`idcurso`),
  UNIQUE INDEX `idcurso_UNIQUE` (`idcurso` ASC, `nomeCurso` ASC),
  INDEX `fk_curso_coordenador_idx` (`coordenador_idcoordenador` ASC),
  CONSTRAINT `fk_curso_coordenador`
    FOREIGN KEY (`coordenador_idcoordenador`)
    REFERENCES `dbPI3`.`coordenador` (`idcoordenador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbPI3`.`TipoDoc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbPI3`.`TipoDoc` ;

CREATE TABLE IF NOT EXISTS `dbPI3`.`TipoDoc` (
  `idTipoDoc` INT NOT NULL AUTO_INCREMENT,
  `nomeTipoDoc` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipoDoc`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbPI3`.`documento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbPI3`.`documento` ;

CREATE TABLE IF NOT EXISTS `dbPI3`.`documento` (
  `iddocumento` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  `situacaoDoc` TINYINT NULL DEFAULT 0,
  `avaliacaoDoc` VARCHAR(45) NULL,
  `curso_idcurso` INT NOT NULL,
  `coordenador_idcoordenador` INT UNSIGNED NOT NULL,
  `TipoDoc_idTipoDoc` INT NOT NULL,
  PRIMARY KEY (`iddocumento`),
  INDEX `fk_documento_curso1_idx` (`curso_idcurso` ASC),
  INDEX `fk_documento_coordenador1_idx` (`coordenador_idcoordenador` ASC),
  INDEX `fk_documento_TipoDoc1_idx` (`TipoDoc_idTipoDoc` ASC),
  CONSTRAINT `fk_documento_curso1`
    FOREIGN KEY (`curso_idcurso`)
    REFERENCES `dbPI3`.`curso` (`idcurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_documento_coordenador1`
    FOREIGN KEY (`coordenador_idcoordenador`)
    REFERENCES `dbPI3`.`coordenador` (`idcoordenador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_documento_TipoDoc1`
    FOREIGN KEY (`TipoDoc_idTipoDoc`)
    REFERENCES `dbPI3`.`TipoDoc` (`idTipoDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbPI3`.`funcionario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbPI3`.`funcionario` ;

CREATE TABLE IF NOT EXISTS `dbPI3`.`funcionario` (
  `idfuncionario` INT NOT NULL AUTO_INCREMENT,
  `nomeFunc` VARCHAR(45) NOT NULL,
  `matricula` INT NOT NULL,
  PRIMARY KEY (`idfuncionario`),
  UNIQUE INDEX `matricula_UNIQUE` (`matricula` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `dbPI3`.`coordenador`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbPI3`;
INSERT INTO `dbPI3`.`coordenador` (`idcoordenador`, `matricula`, `nomeCoordenador`) VALUES (1, 111, 'João da Silva');
INSERT INTO `dbPI3`.`coordenador` (`idcoordenador`, `matricula`, `nomeCoordenador`) VALUES (2, 222, 'Rebeca Borges');
INSERT INTO `dbPI3`.`coordenador` (`idcoordenador`, `matricula`, `nomeCoordenador`) VALUES (3, 333, 'Pedro Santos');
INSERT INTO `dbPI3`.`coordenador` (`idcoordenador`, `matricula`, `nomeCoordenador`) VALUES (4, 0, 'a designar');

COMMIT;


-- -----------------------------------------------------
-- Data for table `dbPI3`.`curso`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbPI3`;
INSERT INTO `dbPI3`.`curso` (`idcurso`, `nomeCurso`, `coordenador_idcoordenador`) VALUES (1, 'Analise e desenvolvimento de sistemas', 1);
INSERT INTO `dbPI3`.`curso` (`idcurso`, `nomeCurso`, `coordenador_idcoordenador`) VALUES (2, 'Psicologia', 2);
INSERT INTO `dbPI3`.`curso` (`idcurso`, `nomeCurso`, `coordenador_idcoordenador`) VALUES (3, 'Moda', 3);
INSERT INTO `dbPI3`.`curso` (`idcurso`, `nomeCurso`, `coordenador_idcoordenador`) VALUES (4, 'Engenharia Civil', 1);
INSERT INTO `dbPI3`.`curso` (`idcurso`, `nomeCurso`, `coordenador_idcoordenador`) VALUES (5, 'Direito', 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `dbPI3`.`TipoDoc`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbPI3`;
INSERT INTO `dbPI3`.`TipoDoc` (`idTipoDoc`, `nomeTipoDoc`) VALUES (1, 'Meta');
INSERT INTO `dbPI3`.`TipoDoc` (`idTipoDoc`, `nomeTipoDoc`) VALUES (2, 'Frequencia');
INSERT INTO `dbPI3`.`TipoDoc` (`idTipoDoc`, `nomeTipoDoc`) VALUES (3, 'Advertencia');
INSERT INTO `dbPI3`.`TipoDoc` (`idTipoDoc`, `nomeTipoDoc`) VALUES (4, 'Reposição de aula');

COMMIT;


-- -----------------------------------------------------
-- Data for table `dbPI3`.`funcionario`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbPI3`;
INSERT INTO `dbPI3`.`funcionario` (`idfuncionario`, `nomeFunc`, `matricula`) VALUES (1, 'Rosa Maria', 1010);
INSERT INTO `dbPI3`.`funcionario` (`idfuncionario`, `nomeFunc`, `matricula`) VALUES (2, 'Cleber Machado', 1111);

COMMIT;

